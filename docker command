<Docker System 정보> 
docker version : Docker 버전 및 상세정보 확인
docker -v : Docker 버전 및 빌드 버전을 한줄로 간단하게 확인.
docker system info : Docker의 시스템 전체 정보 확인.
docker system events : 서버로 부터 실시간 이벤트를 받는다. 
docker system df : 도커 디스크의 사용량 확인.
docker login -u [ID] : 도커 허브에 로그인
1. FROM
설명: 이미지를 기반으로 새로운 이미지를 만듭니다.
예시: FROM ubuntu:20.04
2. RUN
설명: 컨테이너 내에서 명령어를 실행하고, 그 결과를 이미지의 새로운 레이어로 추가합니다.
예시: RUN apt-get update && apt-get install -y curl
3. COPY
설명: 호스트의 파일이나 디렉토리를 컨테이너의 파일 시스템에 복사합니다.
예시: COPY . /app
4. ADD
설명: COPY와 유사하지만, URL에서 파일을 다운로드하거나, 압축 파일을 자동으로 풀어주는 기능이 추가됩니다.
예시: ADD https://example.com/file.tar.gz /app/
5. CMD
설명: 컨테이너가 시작될 때 실행될 기본 명령어를 설정합니다. 단 하나의 CMD만 사용해야 하며, 나중에 지정된 CMD가 이전 것을 덮어씁니다.
예시: CMD ["python", "app.py"]
6. ENTRYPOINT
설명: 컨테이너가 시작될 때 실행될 기본 명령어를 설정합니다. CMD와 함께 사용되어 기본 인수를 추가할 수 있습니다.
예시: ENTRYPOINT ["python"]와 CMD ["app.py"]를 함께 사용하여 python app.py를 실행할 수 있습니다.
7. WORKDIR
설명: 명령어들이 실행될 작업 디렉토리를 설정합니다.
예시: WORKDIR /app
8. ENV
설명: 환경 변수를 설정합니다.
예시: ENV APP_ENV=production
9. EXPOSE
설명: 컨테이너가 외부에 노출할 포트를 지정합니다.
예시: EXPOSE 80
10. VOLUME
설명: 컨테이너와 호스트 간에 공유할 디렉토리를 지정합니다.
예시: VOLUME /data
11. USER
설명: 컨테이너 내에서 명령을 실행할 사용자 계정을 지정합니다.
예시: USER nobody
12. ARG
설명: 빌드 시 전달할 수 있는 변수(빌드 타임 변수)를 정의합니다.
예시: ARG VERSION=1.0
13. LABEL
설명: 이미지에 메타데이터를 추가합니다.
예시: LABEL maintainer="you@example.com"
14. STOPSIGNAL
설명: 컨테이너를 종료할 때 사용할 시스템 호출 신호를 지정합니다.
예시: STOPSIGNAL SIGTERM
https://lucas-owner.tistory.com/51
https://www.daleseo.com/dockerfile/
